name: Binary Build
on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        include:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-24.04-arm }

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Update Rust toolchain
        run: rustup update stable

      - name: Install system dependencies
        run: ./.github/scripts/ubuntu_setup.sh libssl-dev libgtk-3-dev libgtk-layer-shell-dev libinput-dev libdbusmenu-gtk3-dev libdbus-1-dev libpulse-dev libluajit-5.1-dev

      - name: Extract metadata
        id: meta
        run: |
          echo "crate=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].name')" >> $GITHUB_OUTPUT
          echo "bins=$(cargo metadata --no-deps --format-version=1 | jq -r '[.packages[0].targets[] | select(.kind[] == "bin") | .name] | join(",")')" >> $GITHUB_OUTPUT

      - name: Build and upload binary
        uses: taiki-e/upload-rust-binary-action@v1
        id: upload
        with:
          bin: ${{ steps.meta.outputs.bins }}
          target: ${{ matrix.target }}
          archive: ${{ steps.meta.outputs.crate }}-${{ matrix.target }}
          dry-run: ${{ env.ACT == 'true' }}
