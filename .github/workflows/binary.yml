name: Binary Build
on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
          
      - name: Setup dependencies
        env:
          CROSS_DEB_ARCH: ${{ matrix.arch == 'aarch64' && 'arm64' || '' }}
        run: ./.github/scripts/ubuntu_setup.sh
      
      - name: Get binary name
        run: echo "BINARY_NAME=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[].targets[] | select( .kind | map(. == "bin") | any ) | .name')" >> $GITHUB_ENV
          
      - name: Build binary
        run: |
          if [ "${{ matrix.arch }}" = "aarch64" ]; then
            export AARCH64_UNKNOWN_LINUX_GNU_PKG_CONFIG=aarch64-linux-gnu-pkg-config
            export PKG_CONFIG_ALLOW_CROSS=1
            export CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc
            export CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++
            export AR_aarch64_unknown_linux_gnu=aarch64-linux-gnu-ar
            export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
            export PKG_CONFIG=aarch64-linux-gnu-pkg-config
            export PKG_CONFIG_SYSROOT_DIR=/
            export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/lib/pkgconfig
          fi
          cargo build --locked --release --target ${{ matrix.arch }}-unknown-linux-gnu
          file target/${{ matrix.arch }}-unknown-linux-gnu/release/${{ env.BINARY_NAME }}
          
      - name: Create release archive
        run: |
          VERSION="${{ github.event.release.tag_name || github.sha }}"
          ARCHIVE="${{ env.BINARY_NAME }}-${VERSION}-${{ matrix.arch }}-unknown-linux-gnu.tar.gz"
          tar -czf "${ARCHIVE}" -C target/${{ matrix.arch }}-unknown-linux-gnu/release ${{ env.BINARY_NAME }}
          echo "ARCHIVE=${ARCHIVE}" >> $GITHUB_ENV
          ls -lh "${ARCHIVE}"
          
      - name: Upload to release
        if: github.event_name == 'release'
        run: gh release upload "${{ github.event.release.tag_name }}" "${{ env.ARCHIVE }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}